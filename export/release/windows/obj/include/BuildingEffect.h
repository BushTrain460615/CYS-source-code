// Generated by Haxe 4.1.5
#ifndef INCLUDED_BuildingEffect
#define INCLUDED_BuildingEffect

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(BuildingEffect)
HX_DECLARE_CLASS0(BuildingShader)
HX_DECLARE_CLASS3(flixel,graphics,tile,FlxGraphicsShader)
HX_DECLARE_CLASS2(openfl,display,GraphicsShader)
HX_DECLARE_CLASS2(openfl,display,Shader)



class HXCPP_CLASS_ATTRIBUTES BuildingEffect_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef BuildingEffect_obj OBJ_;
		BuildingEffect_obj();

	public:
		enum { _hx_ClassId = 0x1d8c27cd };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="BuildingEffect")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"BuildingEffect"); }
		static ::hx::ObjectPtr< BuildingEffect_obj > __new();
		static ::hx::ObjectPtr< BuildingEffect_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~BuildingEffect_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("BuildingEffect",45,94,24,ed); }

		 ::BuildingShader shader;
		void addAlpha(Float alpha);
		::Dynamic addAlpha_dyn();

		void setAlpha(Float alpha);
		::Dynamic setAlpha_dyn();

};


#endif /* INCLUDED_BuildingEffect */ 
